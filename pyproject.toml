[project]
name = "fairque"
version = "0.1.0"
description = "A fair queue implementation using Redis with work stealing and priority scheduling"
requires-python = ">=3.10"
readme = "README.md"
license = "BSD-3-Clause"
authors = [
    {name = "Makoto Yui", email = "myui@apache.org"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "redis>=6.2.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "typing-extensions>=4.5.0",
    "types-pyyaml>=6.0.12.20250516",
    "croniter>=6.0.0",
    "pytz>=2025.2",
]

[project.urls]
homepage = "https://github.com/myui/fairque"
repository = "https://github.com/myui/fairque"

[project.optional-dependencies]
scheduler = [
    "croniter>=1.4.0",
    "pytz>=2023.3",
]
monitoring = [
    "rich>=10.0.0",
]

[project.scripts]
fairque-info = "fairque.monitoring.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "psutil>=5.9.0",
    "pytest-cov>=6.1.1",
]

[tool.ruff]
target-version = "py310"
line-length = 100
exclude = ["build", "dist"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",     # line too long, handled by black
    "B008",     # do not perform function calls in argument defaults
    "C901",     # too complex
    "ANN101",   # missing type annotation for `self` in method
    "ANN102",   # missing type annotation for `cls` in classmethod
    "ANN401",   # dynamically typed expressions (typing.Any) are disallowed
    "UP035",    # import from `typing` instead of `typing_extensions`
    "UP006",    # use `list` instead of `List` for type annotations
    "UP007",    # use `X | Y` instead of `Union[X, Y]`
    "PLR0913",  # too many arguments to function call
    "RUF010",   # use explicit conversion flag
    "B027",     # accept empty method in abstract classes
]
exclude = [
    ".git",
    ".ruff_cache",
    ".mypy_cache",
    ".pytest_cache",
    "venv",
    "env",
    ".venv",
    ".env",
]

[tool.ruff.lint.isort]
known-first-party = ["fairque"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
exclude = ["build/", "dist/"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = [
    "--cov=fairque",
    "--cov-report=term-missing",
    "--cov-report=html",
]
